[{"C:\\dev\\webpranks\\src\\index.tsx":"1","C:\\dev\\webpranks\\src\\reportWebVitals.ts":"2","C:\\dev\\webpranks\\src\\App.tsx":"3","C:\\dev\\webpranks\\src\\network.tsx":"4","C:\\dev\\webpranks\\src\\util.ts":"5"},{"size":500,"mtime":1605059919447,"results":"6","hashOfConfig":"7"},{"size":431,"mtime":1608517700629,"results":"8","hashOfConfig":"7"},{"size":1876,"mtime":1610936509932,"results":"9","hashOfConfig":"7"},{"size":2165,"mtime":1610933117032,"results":"10","hashOfConfig":"7"},{"size":884,"mtime":1610901652150,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"55v9tg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\dev\\webpranks\\src\\index.tsx",[],["23","24"],"C:\\dev\\webpranks\\src\\reportWebVitals.ts",[],"C:\\dev\\webpranks\\src\\App.tsx",["25","26","27","28","29","30"],"C:\\dev\\webpranks\\src\\network.tsx",["31"],"C:\\dev\\webpranks\\src\\util.ts",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":32,"column":24,"nodeType":"43","messageId":"44","endLine":32,"endColumn":27,"suggestions":"45"},{"ruleId":"36","severity":1,"message":"46","line":34,"column":16,"nodeType":"38","messageId":"39","endLine":34,"endColumn":23},{"ruleId":"36","severity":1,"message":"47","line":42,"column":24,"nodeType":"38","messageId":"39","endLine":42,"endColumn":29},{"ruleId":"41","severity":1,"message":"42","line":65,"column":23,"nodeType":"43","messageId":"44","endLine":65,"endColumn":26,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":60,"column":8,"nodeType":"51","messageId":"52","endLine":60,"endColumn":58},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["55","56"],"'setHtml' is assigned a value but never used.","'error' is assigned a value but never used.",["57","58"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","no-global-assign","no-unsafe-negation",{"messageId":"59","fix":"60","desc":"61"},{"messageId":"62","fix":"63","desc":"64"},{"messageId":"59","fix":"65","desc":"61"},{"messageId":"62","fix":"66","desc":"64"},"suggestUnknown",{"range":"67","text":"68"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"67","text":"69"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"70","text":"68"},{"range":"70","text":"69"},[672,675],"unknown","never",[1521,1524]]